diff -urN libsharp-1.0.0_orig/configure.ac libsharp-1.0.0/configure.ac
--- libsharp-1.0.0_orig/configure.ac	2018-10-15 01:33:24.000000000 -0700
+++ libsharp-1.0.0/configure.ac	2020-09-18 10:12:30.917793669 -0700
@@ -47,28 +47,30 @@
      ENABLE_PIC=yes
    fi])

-case $CCTYPE in
-  gcc)
-    CCFLAGS="-O3 -fno-tree-vectorize -ffast-math -fomit-frame-pointer -std=c99 -pedantic -Wextra -Wall -Wno-unknown-pragmas -Wshadow -Wmissing-prototypes -Wfatal-errors -march=native"
-    GCCVERSION="`$CC -dumpversion 2>&1`"
-    echo "Using gcc version $GCCVERSION"
-    AC_SUBST(GCCVERSION)
-    changequote(,)
-    gcc43=`echo $GCCVERSION | grep -c '^4\.[3456789]'`
-    gcc44=`echo $GCCVERSION | grep -c '^4\.4'`
-    changequote([,])
-    if test $gcc44 -gt 0; then
-      CCFLAGS="$CCFLAGS -fno-tree-fre"
-    fi
-    ;;
-  icc)
-    CCFLAGS="-O3 -xHOST -std=c99 -ip -Wbrief -Wall -vec-report0 -openmp-report0 -wd383,981,1419,1572"
-    ;;
-  *)
-    CCFLAGS="-O2"
-    # Don't do anything now
-    ;;
-esac
+# case $CCTYPE in
+#   gcc)
+#     CCFLAGS="-O3 -fno-tree-vectorize -ffast-math -fomit-frame-pointer -std=c99 -pedantic -Wextra -Wall -Wno-unknown-pragmas -Wshadow -Wmissing-prototypes -Wfatal-errors -march=native"
+#     GCCVERSION="`$CC -dumpversion 2>&1`"
+#     echo "Using gcc version $GCCVERSION"
+#     AC_SUBST(GCCVERSION)
+#     changequote(,)
+#     gcc43=`echo $GCCVERSION | grep -c '^4\.[3456789]'`
+#     gcc44=`echo $GCCVERSION | grep -c '^4\.4'`
+#     changequote([,])
+#     if test $gcc44 -gt 0; then
+#       CCFLAGS="$CCFLAGS -fno-tree-fre"
+#     fi
+#     ;;
+#   icc)
+#     CCFLAGS="-O3 -xHOST -std=c99 -ip -Wbrief -Wall -vec-report0 -openmp-report0 -wd383,981,1419,1572"
+#     ;;
+#   *)
+#     CCFLAGS="-O2"
+#     # Don't do anything now
+#     ;;
+# esac
+
+CCFLAGS="$CFLAGS"

 case $system in
   Darwin-*)
diff -urN libsharp-1.0.0_orig/python/setup.py libsharp-1.0.0/python/setup.py
--- libsharp-1.0.0_orig/python/setup.py	2018-10-15 01:33:24.000000000 -0700
+++ libsharp-1.0.0/python/setup.py	2020-09-18 10:14:56.831182434 -0700
@@ -34,12 +34,21 @@
 libsharp_include = os.environ.get('LIBSHARP_INCLUDE', libsharp and os.path.join(libsharp, 'include'))
 libsharp_lib = os.environ.get('LIBSHARP_LIB', libsharp and os.path.join(libsharp, 'lib'))

+ompflags = os.environ.get('OPENMP_CXXFLAGS', None)
+
 if libsharp_include is None or libsharp_lib is None:
     sys.stderr.write('Please set LIBSHARP environment variable to the install directly of libsharp, '
                      'this script will refer to the lib and include sub-directories. Alternatively '
                      'set LIBSHARP_INCLUDE and LIBSHARP_LIB\n')
     sys.exit(1)

+extra_link = []
+if ompflags is not None:
+    extra_link.append(ompflags)
+
+if sys.platform.lower() == 'darwin':
+    extra_link.append("-Wl,-undefined,dynamic_lookup")
+
 if __name__ == "__main__":
     setup(install_requires = ['numpy'],
           packages = find_packages(),
@@ -70,14 +79,14 @@
                         libraries=["sharp", "fftpack", "c_utils"],
                         include_dirs=[libsharp_include, np.get_include()],
                         library_dirs=[libsharp_lib],
-                        extra_link_args=["-fopenmp"],
+                        extra_link_args=extra_link,
               ),
               Extension("libsharp.libsharp_mpi",
                         ["libsharp/libsharp_mpi.pyx"],
                         libraries=["sharp", "fftpack", "c_utils"],
                         include_dirs=[libsharp_include, np.get_include()],
                         library_dirs=[libsharp_lib],
-                        extra_link_args=["-fopenmp"],
+                        extra_link_args=extra_link,
               ),
               ]),
           )
