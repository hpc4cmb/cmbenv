
# OS type (linux OR osx)
OSTYPE = linux

# Specify the template to use
TEMPLATE = linux

# Python version to use
PYVERSION = auto

# Packages to install with pip
PIP_PKGS = future nose Cython numpy scipy matplotlib pyyaml astropy six psutil ephem pandas memory_profiler ipython cycler kiwisolver python-dateutil toml numba tbb nbstripout black wurlitzer ipympl ipykernel jupyterlab pillow pshmem tomlkit traitlets

# Packages to install with conda
CONDA_PKGS =

# Serial compilers

CC = gcc
CXX = g++
FC = gfortran

# Compiler to use for packages needed on the build machine

BUILD_CC = gcc
BUILD_CXX = g++

# MPI compilers

MPICC = mpicc
MPICXX = mpicxx
MPIFC = mpifort
MPI_CPPFLAGS = @AUX_PREFIX@/include
MPI_LDFLAGS = @AUX_PREFIX@/lib
MPI_CXXLIB = mpicxx
MPI_LIB = mpi
MPI_EXTRA_COMP =
MPI_EXTRA_LINK =

# Compile flags

CFLAGS = -O3 -fPIC -pthread
CXXFLAGS = -O3 -fPIC -pthread -std=c++11
FCFLAGS = -O3 -fPIC -pthread -std=legacy -fallow-argument-mismatch

OPENMP_CFLAGS = -fopenmp
OPENMP_CXXFLAGS = -fopenmp
LDFLAGS = -lpthread -fopenmp

# Are we doing a cross-compile?
CROSS =

# Parallel builds
MAKEJ = 4

# Define MKL location
MKL =

# For BLAS/LAPACK, we use openblas

BLAS = @AUX_PREFIX@/lib/libopenblas.a -fopenmp -lm
LAPACK =

# Boost toolchain name

BOOSTCHAIN = gcc

# Group and permissions to set

CHGRP =
CHMOD =
