
# OS type (linux OR osx)
OSTYPE = linux

# Specify the template to use
TEMPLATE = linux

# Python version to use
PYVERSION = auto

# Packages to install with pip
PIP_PKGS = 

# Packages to install with conda
CONDA_PKGS = cmake future nose cython matplotlib pyyaml astropy healpy six psutil ephem virtualenv pandas memory_profiler ipython cycler kiwisolver python-dateutil toml numba tbb nbstripout black wurlitzer ipympl ipykernel jupyterlab pillow pshmem tomlkit traitlets ducc0 plotly plotly-resampler h5py mpi4py

# Serial compilers

CC = amdclang
CXX = amdclang++
FC = amdflang

# Compiler to use for packages needed on the build machine

BUILD_CC = gcc
BUILD_CXX = g++
BUILD_FC = gfortran

# MPI compilers

MPICC = mpicc
MPICXX = mpicxx
MPIFC = mpifort
MPI_CPPFLAGS = @AUX_PREFIX@/include
MPI_LDFLAGS = @AUX_PREFIX@/lib
MPI_CXXLIB = mpichcxx
MPI_LIB = mpich
MPI_EXTRA_COMP =
MPI_EXTRA_LINK = 

# Compile flags

CFLAGS = -O3 -g -fPIC -Wno-error=implicit-function-declaration
CXXFLAGS = -O3 -g -fPIC -std=c++11
FCFLAGS = -O3 -g -fPIC 

OPENMP_CFLAGS = -fopenmp
OPENMP_CXXFLAGS = -fopenmp
LDFLAGS = -rtlib=compiler-rt -fopenmp

# Are we doing a cross-compile?
CROSS =

# Parallel builds
MAKEJ = 8

# Define MKL location
MKL =

# For BLAS/LAPACK, we use our custom openblas

BLAS = @AUX_PREFIX@/lib/libopenblas.so -fopenmp -lm
LAPACK =

# Boost toolchain name

BOOSTCHAIN = clang

# Group and permissions to set

CHGRP =
CHMOD =
