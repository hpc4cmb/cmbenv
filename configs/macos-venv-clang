
# OS type (linux OR macos)
OSTYPE = macos

# Specify the template to use
TEMPLATE = macos-homebrew

# Python version to use
PYVERSION = auto

# Specify additional packages to install with Homebrew
HOMEBREW_PKGS = python libtool autoconf automake cmake boost

# Packages to install with pip
PIP_PKGS = future nose Cython numpy scipy matplotlib pyyaml astropy six psutil ephem pandas memory_profiler ipython cycler kiwisolver python-dateutil toml numba tbb nbstripout black wurlitzer ipympl ipykernel jupyterlab pyfftw pillow

# Packages to install with conda
CONDA_PKGS =

# Serial compilers

CC = clang
CXX = clang++
FC =

# Compiler to use for packages needed on the build machine

BUILD_CC = clang
BUILD_CXX = clang++

# MPI compilers

MPICC = mpicc
MPICXX = mpicxx
MPIFC =
MPI_CPPFLAGS = @AUX_PREFIX@/include
MPI_LDFLAGS = @AUX_PREFIX@/lib
MPI_CXXLIB = mpichcxx
MPI_LIB = mpich
MPI_EXTRA_COMP =
MPI_EXTRA_LINK =

# Compile flags

CFLAGS = -O3 -fPIC
CXXFLAGS = -O3 -fPIC -std=c++11 -stdlib=libc++
FCFLAGS = -O3 -fPIC

OPENMP_CFLAGS =
OPENMP_CXXFLAGS =
LDFLAGS =

# Are we doing a cross-compile?

CROSS =

# Parallel builds
MAKEJ = 2

# Define MKL location
MKL =

# For BLAS/LAPACK, we use accelerate framework

BLAS = -framework Accelerate
LAPACK =

# Boost toolchain name

BOOSTCHAIN = clang

# Group and permissions to set

CHGRP =
CHMOD =
