
# OS type (linux OR macos)
OSTYPE = linux

# Specify the template to use
TEMPLATE = docker-debian

# Python version
PYVERSION = 3.7

# Specify the docker base image
DOCKER_BASE = python:3.7-slim-buster

# Specify additional packages to install for docker builds
DOCKER_SYS_PKGS = m4 libtool autoconf automake llvm libsuitesparse-dev libfftw3-dev libcfitsio-dev libflac-dev zlib1g-dev libbz2-dev libopenblas-dev liblapack-dev libhdf5-dev

# Packages to install with pip
PIP_PKGS = setuptools future six Cython cycler kiwisolver pyparsing python-dateutil toml pkgconfig pytz psutil==5.7.0 numpy==1.18.4 scipy==1.4.1 matplotlib==3.2.1 pandas==1.0.3 memory_profiler==0.57.0 astropy==4.0.1.post1 ephem==3.7.7.1 ipython==7.14.0 numba==0.49.1 tbb cmake sphinx sphinx-rtd-theme pyfftw

# Packages to install with conda
CONDA_PKGS =

# Serial compilers

CC = gcc
CXX = g++
FC = gfortran

# Compiler to use for packages needed on the build machine

BUILD_CC = gcc
BUILD_CXX = g++

# MPI compilers

MPICC = mpicc
MPICXX = mpicxx
MPIFC = mpifort
MPI_CPPFLAGS = @AUX_PREFIX@/include
MPI_LDFLAGS = @AUX_PREFIX@/lib
MPI_CXXLIB = mpichcxx
MPI_LIB = mpich
MPI_EXTRA_COMP =
MPI_EXTRA_LINK =

# Compile flags

CFLAGS = -O2 -g -fPIC -pthread
CXXFLAGS = -O2 -g -fPIC -pthread -std=c++11
FCFLAGS = -O2 -g -fPIC -pthread

OPENMP_CFLAGS = -fopenmp
OPENMP_CXXFLAGS = -fopenmp
LDFLAGS = -lpthread -fopenmp

# Are we doing a cross-compile?
CROSS =

# Parallel builds
MAKEJ = 1

# Define MKL location
MKL =

# For BLAS/LAPACK, we use openblas

BLAS = -lopenblas -fopenmp -lm
LAPACK =

# Boost toolchain name

BOOSTCHAIN = gcc

# Group and permissions to set

CHGRP =
CHMOD =
