
# OS type (linux OR macos)
OSTYPE = linux

# Specify the template to use
TEMPLATE = linux

# Python version to use
PYVERSION = 3.7

# Packages to install with pip
PIP_PKGS =

# Packages to install with conda
CONDA_PKGS = future nose cython numpy scipy matplotlib pyyaml astropy six psutil ephem virtualenv pandas memory_profiler ipython cycler kiwisolver python-dateutil toml numba tbb nbstripout black wurlitzer ipympl ipykernel jupyterlab pyfftw pillow

# Serial compilers

CC = gcc
CXX = g++
FC = gfortran

# Compiler to use for packages needed on the build machine

BUILD_CC = gcc
BUILD_CXX = g++

# MPI compilers

MPICC = ${CRAYPE_DIR}/bin/cc
MPICXX = ${CRAYPE_DIR}/bin/CC
MPIFC = ${CRAYPE_DIR}/bin/ftn
MPI_CPPFLAGS = ${CRAY_MPICH2_DIR}/include
MPI_LDFLAGS = ${CRAY_MPICH2_DIR}/lib
MPI_CXXLIB = mpichcxx
MPI_LIB = mpich
MPI_EXTRA_COMP =
MPI_EXTRA_LINK = -shared

# Compile flags

CFLAGS = -O3 -g -fPIC -pthread
CXXFLAGS = -O3 -g -fPIC -pthread -std=c++11
FCFLAGS = -O3 -g -fPIC -pthread

OPENMP_CFLAGS = -fopenmp
OPENMP_CXXFLAGS = -fopenmp
LDFLAGS = -fopenmp -lpthread

# We are cross-compiling for KNL on Haswell login nodes
CROSS =

# Parallel builds
MAKEJ = 4

# Define MKL location
MKL =

# For BLAS/LAPACK, we use openblas

BLAS = -lopenblas -fopenmp -lm
LAPACK =

# Boost toolchain name

BOOSTCHAIN = gcc

# Group and permissions to set

CHGRP = hpcosmo
CHMOD = a+rX,g-w,o-w
