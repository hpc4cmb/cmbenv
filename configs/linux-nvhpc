
# OS type (linux OR osx)
OSTYPE = linux

# Specify the template to use
TEMPLATE = linux

# Python version to use
PYVERSION = auto

# Packages to install with pip
PIP_PKGS = future nose Cython scipy matplotlib pyyaml astropy six psutil ephem pandas memory_profiler ipython cycler kiwisolver python-dateutil toml cmake numba tbb nbstripout black wurlitzer ipympl ipykernel jupyterlab pillow pshmem tomlkit traitlets healpy ducc0

# Packages to install with conda
CONDA_PKGS =

# Serial compilers

CC = nvc
CXX = nvc++
FC = nvfortran

# Compiler to use for packages needed on the build machine

BUILD_CC = gcc
BUILD_CXX = g++
BUILD_FC = gfortran

# MPI compilers

MPICC = mpicc
MPICXX = mpicxx
MPIFC = mpifort
MPI_CPPFLAGS = @AUX_PREFIX@/include
MPI_LDFLAGS = @AUX_PREFIX@/lib
MPI_CXXLIB = mpichcxx
MPI_LIB = mpich
MPI_EXTRA_COMP = -noswitcherror
MPI_EXTRA_LINK =

# Compile flags

CFLAGS = -O3 -fPIC -pthread
CXXFLAGS = -O3 -fPIC -pthread -std=c++11
FCFLAGS = -O3 -fPIC -pthread

OPENMP_CFLAGS = -mp
OPENMP_CXXFLAGS = -mp
LDFLAGS = -lpthread -mp

# Are we doing a cross-compile?
CROSS =

# Parallel builds
MAKEJ = 4

# Define MKL location
MKL =

# For BLAS/LAPACK, we use lapack with nvhpc sdk

BLAS = -L${NVHPC_ROOT}/compilers/lib -lblas -lnvf -mp
LAPACK = -L${NVHPC_ROOT}/compilers/lib -llapack -lnvf -mp

# Boost toolchain name

BOOSTCHAIN = pgi

# Group and permissions to set

CHGRP =
CHMOD =
